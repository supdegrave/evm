-# TODO: add error-handling display for Users
%h3 Users
%table 
  %thead
    %tr
      %th Email
      %th Name
      %th Roles
      %th
  %tbody#users_table
    %tr(rv-each-user="data.Users")
      %td {user.email}
      %td {user.name}
      %td.role-edit(onmouseover="")
        %span(data-user-id="") 
          edit 
          %span.hidden {user.id}
        %ul.user-roles
          %li(rv-each-role="user.functions_roles") {role.function} {role.role}
      -# = link_to("Delete user", user_path(user), :data => { :confirm => "Are you sure?" }, :method => :delete, :class => 'btn btn-mini') unless user == current_user
  %tfoot
    %tr 
      = simple_form_for(@new_user, url: '/admin#invitation', remote: true, html: {data: {type: :json}}) do |f|
        %td{colspan: 4}
          .row.collapse
            .large-3.columns
              = f.input_field :email, label: false, placeholder: 'Email address', required: true
            .large-3.columns
              -# TODO: determine why having multiple input fields blocks submit-on-return
              -# = f.input_field :first_name, label: false, placeholder: 'First Name (required)', required: true
            .large-3.columns
              -# = f.input_field :last_name, label: false, placeholder: 'Last Name'
            .large-3.columns

.row
  .large-6.columns
    -# TODO: add error-handling display for Functions 
    %h3 Functions
    %table.full-width
      %thead
        %tr
          %th Function
      %tbody#functions_table
        %tr(rv-each-function="data.Functions")
          %td {function.name}
      %tfoot
        %tr
          = simple_form_for(@new_function, remote: true, html: {data: {type: :json}}) do |f|
            %td
              .row.collapse
                .large-8.columns
                  = f.input_field :name, label: false, placeholder: 'Function Name', required: true

  .large-6.columns
    -# TODO: add error-handling display for Roles 
    %h3 Roles 
    %table.full-width
      %thead
        %tr
          %th Role
      %tbody#roles_table
        %tr(rv-each-role="data.Roles")
          %td {role.name}
      %tfoot
        %tr
          = simple_form_for(@new_role, remote: true, html: {data: {type: :json}}) do |f|
            %td
              .row.collapse
                .large-8.columns 
                  = f.input_field :name, label: false, placeholder: 'Role Name', required: true

#myModal.reveal-modal.small(data-reveal)
  %h4 Current Job Roles
  %ul.modal-user-roles
    / list populated by click handler inside [[ $('#users_table').on 'DOMNodeInserted' ]]
  %h4 Add Job Role
  #modal-error 
  %h5 Function 
  %select#new-function
    %option
    %option(rv-each-function="data.Functions") {function.name}
  %h5 Role 
  %select#new-role
    %option
    %option(rv-each-role="data.Roles") {role.name}
  = button_tag "Add", id: "add-role"
  = button_tag "Cancel", id: "cancel-add-role"
  %a.close-reveal-modal &#215;
  