* data binding for selects, user/function/role lists, user's assigned roles 

* new migration: add "is_functional" bit to Role, default to true
  - seed data: do two separate role inserts: 
    CORE_ROLES (admin, Board Member) - is_functional = false
    FUNCTIONAL_ROLES (all the rest)

* seed data: insert existing functions from `2013 Leads List spreadsheet`? 
  
admin.js.coffee
* myModal delete 
* move hard-coded ["admin", "Board Member"] to external js file to allow configuration
  - js file should simply assign an array of strings to variable
  - update selRole.change handler to set that variable to [] if null / undefined
  - alternately, update Role to include "core_roles" bit
    - then change application.yml to have CORE_ROLES and FUNCTION_ROLES

app/views/admin/index.html.haml:
* add error-handling display for Users, Functions, Roles 
* determine why having multiple input fields blocks submit-on-return (email/first_name/last_name)

app/views/functions/_admin_edit.html.haml:
* uncomment delete link when ready to wire up ajax return 
* figure out why destroy_role_path is missing from routes
* convert 'Delete User' to icon, with remote method call

config/routes.rb:
* it would be deeply useful to grok this completely: http://guides.rubyonrails.org/routing.html
* resourcify admin routes. I think that means changing #invitation to #create 

spec/features/admin_actions_spec.rb:
* look into webkit driver rather than selenium 

spec/features/admin_actions_spec.rb:
* figure out why ajax update isn't working in selenium 

admin_controller.rb
* Don't require password to edit account 
# https://github.com/plataformatec/devise/wiki/How-To:-Allow-users-to-edit-their-account-without-providing-a-password



# ##### SQL TO CLEAR USERS / ROLES / FUNCTIONS #####
delete from users where id > 44; delete from roles where id > 161; delete from functions where id > 15; delete from users_roles where user_id > 44; -- delete from users_roles where role_id > 157; 
select * from roles; select * from users; select * from users_roles;

# FFS why does coffeescript turn for..in into a regular for loop? 
# for msg in xhr.responseJSON 
#   modalError.append(xhr.responseJSON[msg] + "<br/>")